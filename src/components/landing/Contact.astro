---
import { getCollection } from "astro:content";

export interface Props {
    itemId: string;
}

const { itemId } = Astro.props;
console.log(Astro.props);
const collections = {
    woodworking: await getCollection("woodworking"),
    gardening: await getCollection("gardening"),
    metalworking: await getCollection("metalworking"),
};
let item: any = null;
if (itemId) {
    for (const [_, collection] of Object.entries(collections)) {
        item = collection.find((entry) => entry.id === itemId);
        if (item) {
            break;
        }
    }
}

const today = new Date().toISOString().split("T")[0];
const twoWeeksFromNow = new Date(Date.now() + 14 * 24 * 60 * 60 * 1000)
    .toISOString()
    .split("T")[0];
---

<div class="bg-gray-900 pt-8 pb-8 px-4 w-full flex flex-col items-center">
    <div class="bg-yellow-600 text-blue-900 text-center w-full max-w-lg p-4 mb-8 rounded-md shadow-md">
      <h2 class="text-2xl">
        Demande de réservation
      </h2>
      <h2 class="text-2xl font-semibold">
        {item.data.name}
    </h2>
    </div>
  
    <form id="contactForm" class="bg-yellow-600 text-gray-900 p-8 rounded-md shadow-md w-full max-w-lg">
      <div class="mb-4">
        <label for="startDate" class="block text-sm font-semibold mb-2 text-blue-900">Date de début:</label>
        <input
          type="date"
          id="startDate"
          name="startDate"
          class="w-full p-2 border border-gray-900 rounded-md focus:outline-none focus:ring focus:border-blue-300"
          min={today}
          max={twoWeeksFromNow}
        />
      </div>
  
      <div class="mb-4">
        <label for="dayNumber" class="block text-sm font-semibold mb-2 text-blue-900">Nombre de jours:</label>
        <input
          type="number"
          id="dayNumber"
          name="dayNumber"
          class="w-full p-2 border border-gray-900 rounded-md focus:outline-none focus:ring focus:border-blue-300"
          min="1"
          value="1"
        />
      </div>
  
      <div class="mb-4">
        <label for="name" class="block text-sm font-semibold mb-2 text-blue-900">Nom</label>
        <input
          type="text"
          id="name"
          name="name"
          required
          class="w-full p-2 border border-gray-900 rounded-md focus:outline-none focus:ring focus:border-blue-300"
        />
      </div>
  
      <input type="hidden" name="itemId" value={itemId || ""} />
      <input type="hidden" name="itemName" value={item.data.name || ""} />
  
      <button type="button" id="sendEmailButton" class="bg-blue-900 font-semibold text-yellow-600 p-3 rounded-md w-full hover:bg-blue-800">
        Envoyer la réservation
      </button>
    </form>
  </div>

<script>
    const sendEmailButton = document.getElementById("sendEmailButton");
    const contactForm = document.getElementById("contactForm");

    if (sendEmailButton && contactForm) {
        sendEmailButton.addEventListener("click", (event) => {
            event.preventDefault();

            const name = contactForm.name.value;
            const startDate = contactForm.startDate?.value;
            const dayNumber = contactForm.dayNumber?.value;
            const itemId = contactForm.itemId.value;
            const itemName = contactForm.itemName.value;

            let body = `Nom: ${name}`;
            if (startDate && dayNumber) {
                body += `\nStart Date: ${startDate}\nNumber of Days: ${dayNumber}`;
            }
            body += `\nItem ID: ${itemId}\nItem Name: ${itemName}`;
            body += `\n-------------Ne rien modifier au dessus de cette ligne----------------`;
            body += `\nMessage libre (optionnel):`;

            const subject = `Demande de réservation pour ${itemName}`;
            const mailtoLink = `mailto:ghislain.rossi@gmail.com?subject=${encodeURIComponent(subject)}&body=${encodeURIComponent(body)}`;

            window.open(mailtoLink, "_blank");
        });
    }
</script>
